<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:wsc="http://www.mulesoft.org/schema/mule/wsc"
	xmlns:american-flights-api="http://www.mulesoft.org/schema/mule/american-flights-api" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/american-flights-api http://www.mulesoft.org/schema/mule/american-flights-api/current/mule-american-flights-api.xsd
http://www.mulesoft.org/schema/mule/wsc http://www.mulesoft.org/schema/mule/wsc/current/mule-wsc.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">
	<flow name="getFlights" doc:id="bdcd69f9-4ca1-439d-872e-bbf73d74c2be" >
		<set-variable value="#[message.attributes.queryParams.airline]" doc:name="airline" doc:id="c67ff82f-70aa-45a6-a6e5-5cdfe006ae5a" variableName="airline"/>
		<flow-ref doc:name="setCode" doc:id="e0d1dd84-715b-4f85-95ae-989b317447d3" name="setCode"/>
		<validation:is-true doc:name="Is valid destination" doc:id="fe18e04d-651c-475b-a7af-a702f9ec35bf" expression="#[['SFO','LAX','CLE','PDX','PDF'] contains vars.code]" message="#['Invalid destination' ++ ' ' ++ (vars.code default ' ')]">
			<error-mapping sourceType="VALIDATION:INVALID_BOOLEAN" targetType="APP:INVALID_DESTINATION" />
		</validation:is-true>
		<choice doc:name="Choice" doc:id="6d9d7566-2fc1-490d-8fa8-4f952b5f5b79" >
			<when expression='#[vars.airline == "american"]'>
				<flow-ref doc:name="getAmericanflights" doc:id="28762947-6d63-42d6-80f7-d380fea582ec" name="getAmericanflights"/>
			</when>
			<when expression='#[vars.airline == "delta"]'>
				<flow-ref doc:name="getDeltaFlights" doc:id="a3985c8b-6439-48ae-bff1-26cf73e87522" name="getDeltaFlights"/>
			</when>
			<when expression='#[vars.airline == "united"]' >
				<flow-ref doc:name="getUnitedFlights" doc:id="05f91afb-de9a-4e0a-9d86-ba3b24c6480a" name="getUnitedFlights" />
			</when>
			<otherwise >
				<flow-ref doc:name="getAllAirlineFlights" doc:id="10c8e238-9a65-4739-9770-122b8b7281b6" name="getAllAirlineFlights"/>
			</otherwise>
		</choice>
		<ee:transform doc:name="[Flights to JSON" doc:id="b30a1647-03b2-4f5e-bf7a-0bfcf0c346bf" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="63dafc2d-10bc-4d57-a0ef-65aa8c597036" />
		
	</flow>
	<flow name="getAllAirlineFlights" doc:id="f28c644b-2a98-429f-beaa-6a4faf689569" >
		<scatter-gather doc:name="Scatter-Gather" doc:id="163f1d3b-0b04-446e-bfb2-8f9bd4561fd2">
			<route>
				<try doc:name="Try" doc:id="6aba12bd-8a18-4f78-8ef7-91e8d2648731" >
					<flow-ref doc:name="getAmericanflights" doc:id="1a69b264-1778-4550-851e-d4d3f2edb7a0" name="getAmericanflights" />
					<error-handler >
						<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="aac22851-3389-45e8-9f68-1e951fd2a6dc" type="ANY">
							<ee:transform doc:name="[]" doc:id="d1c9ae06-8d9d-42ff-b43d-0e53fc58bcdb" >
								<ee:message >
									<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
[]]]></ee:set-payload>
								</ee:message>
							</ee:transform>
						</on-error-continue>
					</error-handler>
				</try>
			</route>
			<route>
				<try doc:name="Try" doc:id="7f73634f-3ca3-4836-9aae-33ac1bacd72d" >
					<flow-ref doc:name="getUnitedFlights" doc:id="9871c4e5-4b39-43c6-8d92-2d2967b04e69" name="getUnitedFlights" />
					<error-handler >
						<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="840e720a-ecbb-43b4-8494-bf7c9f50efc0" type="ANY">
							<ee:transform doc:name="[]" doc:id="488d218a-2669-4a58-83b9-4663e222f123" >
								<ee:message >
									<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
[]]]></ee:set-payload>
								</ee:message>
							</ee:transform>
						</on-error-continue>
					</error-handler>
				</try>
			</route>
			<route>
				<try doc:name="Try" doc:id="3347487f-3f20-4ba7-90d1-02e0b894d42b" >
					<flow-ref doc:name="getDeltaFlights" doc:id="9f6cdb34-bd41-4279-8142-9d526913687f" name="getDeltaFlights" />
					<error-handler >
						<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="82ab83b4-7ee2-4de6-95e5-16bd230ebd84" type="ANY"/>
					</error-handler>
				</try>
			</route>
		</scatter-gather>
		<ee:transform doc:name="flatten to [Flights]" doc:id="5b71f892-5239-4a72-aba7-10ab3a5a1f44" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
flatten(payload..payload)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="7d3eaa39-305b-4a66-b4a3-a2056c880592" />
	</flow>
	<sub-flow name="setCode" doc:id="e58e6f69-2741-4619-8ebf-a8c9560a2ac9">
		<set-variable value="#[message.attributes.queryParams.code]" doc:name="code" doc:id="cb6de6fd-f6f3-4b90-92e9-af3aebfaf266" variableName="code" />
		<ee:transform doc:name="Transform Message" doc:id="87d42c74-02a8-45ba-906d-fe7030703b02">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
{
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	<flow name="getAmericanflights" doc:id="bcb2ee3a-de32-4057-ab1d-52d6130b837e" >
		<american-flights-api:get-flights doc:name="Get flights" doc:id="b2ac8313-b1a2-4a4d-9644-a828159d864c" config-ref="American_Flights_API_Config" client-id="${american.client_id}" client-secret="${american.client_secret}" destination="#[vars.code]"/>
		<ee:transform doc:name="Transform Message" doc:id="9ebd6f88-c0b2-4e9e-b421-fcb29f432453" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload map ( payload01 , indexOfPayload01 ) -> {
	airlineName: "american",
	availableSeats: payload01.emptySeats,
	departureDate: payload01.departureDate,
	destination: payload01.destination,
	flightCode: payload01.code,
	origination: payload01.origin,
	planeType: payload01.plane."type",
	price: payload01.price
} as Object {
	class : "com.mulesoft.training.Flight"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="2db84358-8760-440a-84b0-34c06ee6f309" />
		<error-handler >
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="dced97fb-6263-47a6-a137-d4b36df0cb48" type="AMERICAN-FLIGHTS-API:BAD_REQUEST">
				<ee:transform doc:name="No flights" doc:id="d91e8f83-ad1d-4db7-85c9-649a8e2d5a9d">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"message": "No flights to " ++ vars.code as String
}
]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="200" doc:name="httpStatus" doc:id="b40aec06-2aa8-4d14-94f8-d141d86a46fc" variableName="httpStatus" />
			</on-error-continue>
		</error-handler>
	</flow>
	<flow name="getUnitedFlights" doc:id="a442341c-3e97-4e04-873c-61fb8195363b" >
		<http:request method="GET" doc:name="Get flights" doc:id="0a2d5312-7e3c-4f93-b9e8-45a05d7a02d6" config-ref="HTTP_Request_configuration" path="/united/flights/{dest}">
			<http:uri-params ><![CDATA[#[output application/java
---
{
	"dest" : vars.code
}]]]></http:uri-params>
		</http:request>
		<ee:transform doc:name="Transform Message" doc:id="99bca50e-ebe8-45c4-b693-9ced3b229d70" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload.flights map ( flight , indexOfFlight ) -> {
	airlineName: flight.airlineName,
	availableSeats: flight.emptySeats,
	departureDate: flight.departureDate,
	destination: flight.destination,
	flightCode: flight.code,
	origination: flight.origin,
	planeType: flight.planeType,
	price: flight.price
} as Object {
	class : "com.mulesoft.training.Flight"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="9c8a5f89-978e-40fc-a100-06b66900e214" />
	</flow>
	<flow name="getDeltaFlights" doc:id="8d37371e-a29b-4691-b742-cc4498bb71bf" >
		<ee:transform doc:name="Transform Message" doc:id="b8110d38-66a3-4ff5-bb15-cae38533993a" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns ns0 http://soap.training.mulesoft.com/
---
{
	ns0#findFlight: {
		destination: vars.code
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<wsc:consume doc:name="GET/flights" doc:id="d761ef1d-38e0-46b9-a8d8-688f7a243424" config-ref="Web_Service_Consumer_Config" operation="findFlight"/>
		<ee:transform doc:name="SOAP to JSON" doc:id="4d335f75-f043-4562-808c-c77ea0fa6ce4" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
ns ns0 http://soap.training.mulesoft.com/
---
payload.body.ns0#findFlightResponse.*return map ( return , indexOfReturn ) -> {
	airlineName: return.airlineName,
	availableSeats: return.emptySeats,
	departureDate: return.departureDate,
	destination: return.destination,
	flightCode: return.code,
	origination: return.origin,
	planeType: return.planeType,
	price: return.price
} as Object {
	class : "com.mulesoft.training.Flight"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="12b0fce6-7c20-4d62-8994-d681fae2be0f" />
	</flow>
	<flow name="postFlight" doc:id="915314b1-9ae1-48b1-9b33-764e3b4f2306" >
		<ee:transform doc:name="Transform Message" doc:id="6c7f50fb-8863-4a0d-9493-f4f2e76c5f06" >
			<ee:message >
				<ee:set-payload resource="json_flight_playground.dwl" />
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="DWoutput" ><![CDATA[%dw 2.0
output application/xml
---
data: {
 	hub: "MUA",
 	flight: {
 		code: payload.toAirpotCode,

 	}
	 }
 	]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="ff648cfc-d0a4-4df4-9838-9a8806deb10e" message="#[vars.DWoutput]"/>
	</flow>
	<flow name="postMultipleFlights" doc:id="56d1df2b-2e2e-4aaa-b60c-7faadb5f3d52">
		<http:listener doc:name="POST/multipleflights" doc:id="4a976608-613e-4b1e-b347-37e0042e2646" config-ref="HTTP_Listener_config" path="/multipleflights" />
		<ee:transform doc:name="Transform Message" doc:id="273a2bb6-1df2-456d-a780-19c6a0902b6a">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/dw
import dasherize from dw::core::Strings
type Currency = String {format: '###.00'}
type Flight = Object {class: "com.mulesoft.training.flight"}

//var numSeats = 400
//var numSeats= (x=400) ->x
/*var numSeats =(planeType: String) ->
	if (planeType contains('737'))
		150
	else
		300
	
		*/
fun getNumSeats (planeType: String) = do {
		var maxSeats =
		if(planeType contains('737'))
			150
		else
			300
		---
		maxSeats
}

---
flights: (payload..*return map (object, index) -> {
	destination: object.destination,
	price: object.price as Number as Currency,
	//totalSeats: numSeats(object.planeType),
	planeType: totalSeats: lookup("getTotalSeats",{planeType: object.planeType}),
	planeType: dasherize(replace(object.planeType,/(Boing)/) with "Boeing"),
	departureDate: object.departureDate as Date {format: "yyyy/MM/dd"} as String {format: "MMM dd, yyyy"},
	availableSeats: object.emptySeats as Number
}as Object)  distinctBy $ filter ($.availableSeats !=0)
				orderBy $.departureDate orderBy $.price
	]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="f504e592-9ffa-472f-8ca1-79646b694fc1" />
	</flow>
	<flow name="getTotalSeats" doc:id="f6308803-f7d9-4725-9e79-b4c952ef521e" >
		<ee:transform doc:name="Transform Message" doc:id="88c868ad-dffc-4ce6-8495-5ca0426ad25f" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java

fun getNumSeats (planeType: String) = do {
		var maxSeats =
		if(planeType contains('737'))
			150
		else
			300
		---
		maxSeats
}
---
 getNumSeats(payload.planeType)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
</mule>
